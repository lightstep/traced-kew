{"version":3,"sources":["../../src/test/lightstep_mock_tracer.js"],"names":[],"mappings":"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","file":"lightstep_mock_tracer.js","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n\nimport fs from 'fs';\nimport _ from 'underscore';\nimport { MockTracer, MockSpan } from './mock_tracer';\n\n\n/**\n * Extend the MockSpan to include LightStep-specific API implementations\n */\nclass LightStepMockSpan extends MockSpan {\n\n    getOperationName() {\n        return this._operationName;\n    }\n\n    beginMicros() {\n        return this._startMs * 1000;\n    }\n    setBeginMicros(us) {\n        this._startMs = us / 1000;\n    }\n\n    endMicros() {\n        return this.finishMs * 1000;\n    }\n    setEndMicros(us) {\n        this._finishMs = us / 1000;\n    }\n\n    generateTraceURL() {\n        return 'https://example.com/lightstep/mock_span/';\n    }\n}\n\n/**\n * Extend the MockTracer to include LightStep-specific API implementations\n */\nexport default class LightStepMockTracer extends MockTracer {\n    _allocSpan(fields) {\n        return new LightStepMockSpan(this);\n    }\n\n    /**\n     * Generates a DOT file (http://www.graphviz.org/) for visualizing the\n     * join ID relationships from a MockTracer report.\n     */\n    generateDotFile(filename, report) {\n        report = report || this.report();\n\n        let vertices = [];\n        let edges = [];\n        let joinSets = {};\n        let offsetMs = report.minStartMs;\n\n        _.each(report.spans, (span) => {\n            let color = span._finishMs === 0 ? 'red' : 'black';\n            let duration = span._finishMs - span._startMs;\n            let width = duration;\n            if (duration < 0) {\n                duration = 'unfinished';\n                width = 0;\n            } else {\n                duration = [\n                    `${duration}ms`,\n                    `${span._startMs - offsetMs}-${span._finishMs - offsetMs}`,\n                ].join('\\n');\n            }\n            let label = `${span._operationName}\\n${duration}`;\n\n            _.each(span._tags, (val, key) => {\n                if (key.match(/^join:/)) {\n                    return;\n                }\n                label += `\\n${key}=${val}`;\n            });\n            vertices.push(`S${span.uuid()} [label=\"${label}\",color=\"${color}\",shape=\"box\",width=\"${width}\"];`);\n\n            _.each(span._tags, (val, key) => {\n                if (!key.match(/^join:/)) {\n                    return;\n                }\n                let setKey = `${key}|${val}`;\n                joinSets[setKey] = joinSets[setKey] || {};\n                joinSets[setKey][span.uuid()] = true;\n            });\n        });\n        _.each(joinSets, (set, key) => {\n            let uuids = _.keys(set);\n            for (let i = 0; i < uuids.length; i++) {\n                for (let j = i + 1; j < uuids.length; j++) {\n                    edges.push(`S${uuids[i]} -- S${uuids[j]};`);\n                }\n            }\n        });\n\n        let preface = [\n            'graph {',\n        ];\n        let suffix = [\n            '}',\n        ];\n        console.log(`Writing DOT graph to '${filename}'`);  // eslint-disable-line\n        fs.writeFileSync(filename, preface.concat(vertices, edges, suffix).join('\\n'));\n    }\n}\n\n// Workaround to avoid require('package').default in ES5.\nmodule.exports = module.exports.default;\n"]}