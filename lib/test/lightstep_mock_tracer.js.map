{"version":3,"sources":["../../src/test/lightstep_mock_tracer.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;AAEA;;;IAGM,iB;;;;;;;;;;;2CAEiB;AACf,mBAAO,KAAK,cAAZ;AACH;;;sCAEa;AACV,mBAAO,KAAK,QAAL,GAAgB,IAAvB;AACH;;;uCACc,E,EAAI;AACf,iBAAK,QAAL,GAAgB,KAAK,IAArB;AACH;;;oCAEW;AACR,mBAAO,KAAK,QAAL,GAAgB,IAAvB;AACH;;;qCACY,E,EAAI;AACb,iBAAK,SAAL,GAAiB,KAAK,IAAtB;AACH;;;2CAEkB;AACf,mBAAO,0CAAP;AACH;;;;;;AAGL;;;;;IAGqB,mB;;;;;;;;;;;mCACN,M,EAAQ;AACf,mBAAO,IAAI,iBAAJ,CAAsB,IAAtB,CAAP;AACH;;;;;;AAGL;;;kBANqB,mB;AAOrB,OAAO,OAAP,GAAiB,OAAO,OAAP,CAAe,OAAhC","file":"lightstep_mock_tracer.js","sourcesContent":["import { MockTracer, MockSpan } from './mock_tracer';\n\n/**\n * Extend the MockSpan to include LightStep-specific API implementations\n */\nclass LightStepMockSpan extends MockSpan {\n\n    getOperationName() {\n        return this._operationName;\n    }\n\n    beginMicros() {\n        return this._startMs * 1000;\n    }\n    setBeginMicros(us) {\n        this._startMs = us / 1000;\n    }\n\n    endMicros() {\n        return this.finishMs * 1000;\n    }\n    setEndMicros(us) {\n        this._finishMs = us / 1000;\n    }\n\n    generateTraceURL() {\n        return 'https://example.com/lightstep/mock_span/';\n    }\n}\n\n/**\n * Extend the MockTracer to include LightStep-specific API implementations\n */\nexport default class LightStepMockTracer extends MockTracer {\n    _allocSpan(fields) {\n        return new LightStepMockSpan(this);\n    }\n}\n\n// Workaround to avoid require('package').default in ES5.\nmodule.exports = module.exports.default;\n"]}